plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    buildFeatures{
        dataBinding = true
    }
    defaultConfig {
        applicationId "com.gideondev.zapmap"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'


    def rxJava_version = "2.1.0"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJava_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxJava_version"


    def retrofit_version= "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:4.2.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.2.0"

    def dagger_version = "2.24"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    kaptTest "com.google.dagger:dagger:$dagger_version"
    testImplementation "com.google.dagger:dagger:$dagger_version"

    // ViewModel and LiveData
    def viewModel_version= "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$viewModel_version"

    // GLIDE
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // unit test
    def androidxTest = '1.4.0'
    def  androidxTestRules = '1.2.0-alpha04'
    def junitVersion = '4.12'
    def mockWebServerVersion = '3.9.0'
    def mockitoKotlinVersion = '2.0.0-RC1'
    def robolectricVersion = '4.3'
    def  espressoVersion = '3.1.1'
    def  jacocoVersion = '0.8.1'

    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test:core:$androidxTest"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    androidTestImplementation "androidx.test:rules:$androidxTestRules"
    testImplementation "junit:$junitVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}